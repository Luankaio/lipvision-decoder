#!/usr/bin/env python3
"""
LipVision Decoder - Detector de L√°bios/Boca

Este programa oferece duas abordagens para detectar e recortar a regi√£o dos l√°bios:
1. MediaPipe (Avan√ßado) - Usa landmarks faciais precisos
2. Haar Cascades (Simples) - Usa detec√ß√£o de face e estimativa da regi√£o da boca

Uso:
    python main.py [--method mediapipe|simple]
"""

import argparse
import sys
import cv2

def check_camera():
    """Verifica se a c√¢mera est√° dispon√≠vel"""
    cap = cv2.VideoCapture(0)
    if not cap.isOpened():
        print("‚ùå Erro: C√¢mera n√£o encontrada ou n√£o acess√≠vel")
        print("Verifique se:")
        print("  - A c√¢mera est√° conectada")
        print("  - N√£o h√° outros programas usando a c√¢mera")
        print("  - Voc√™ tem permiss√µes para acessar a c√¢mera")
        return False
    cap.release()
    return True

def print_banner():
    """Imprime o banner do programa"""
    print("=" * 60)
    print("üé• LipVision Decoder - Detector de L√°bios/Boca")
    print("=" * 60)
    print("Multimodal pipeline para leitura labial")
    print("Detecta e recorta a regi√£o dos l√°bios em tempo real")
    print("=" * 60)

def main():
    """Fun√ß√£o principal"""
    parser = argparse.ArgumentParser(
        description="Detector de l√°bios usando vis√£o computacional",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
M√©todos dispon√≠veis:
  mediapipe  - Usa MediaPipe para detec√ß√£o precisa de landmarks (recomendado)
  simple     - Usa Haar Cascades para detec√ß√£o b√°sica (mais r√°pido)

Exemplos:
  python main.py --method mediapipe
  python main.py --method simple
  python main.py  # usa MediaPipe por padr√£o
        """
    )
    
    parser.add_argument(
        "--method",
        choices=["mediapipe", "simple"],
        default="mediapipe",
        help="M√©todo de detec√ß√£o a usar (padr√£o: mediapipe)"
    )
    
    args = parser.parse_args()
    
    print_banner()
    
    # Verificar se a c√¢mera est√° dispon√≠vel
    if not check_camera():
        sys.exit(1)
    
    print(f"üîß M√©todo selecionado: {args.method}")
    print()
    
    try:
        if args.method == "mediapipe":
            print("üì° Carregando detector MediaPipe...")
            from lipvision.data_collection.lip_detector import LipDetector
            detector = LipDetector()
            detector.run_camera()
        elif args.method == "simple":
            print("üì° Carregando detector simples...")
            from lipvision.data_collection.simple_lip_detector import SimpleLipDetector
            detector = SimpleLipDetector()
            detector.run_camera()
    
    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {e}")
        print("Verifique se todas as depend√™ncias est√£o instaladas:")
        print("pip install -r requirements.txt")
        sys.exit(1)
    
    except KeyboardInterrupt:
        print("\nüëã Programa interrompido pelo usu√°rio")
    
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        sys.exit(1)
    
    print("‚úÖ Programa finalizado com sucesso")

if __name__ == "__main__":
    main()
